name: Quality control

on:
  push:

jobs:
  pytest:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    env:
      QUEUE_NAME: "sms"
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      RABBIT_HOST: ${{ secrets.RABBIT_HOST }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip
          cache-dependency-path: "**/requirements*.txt"
      - name: Install dependencies
        run: pip install -r requirements_dev.txt
      - name: Test with pytest
        run: pytest
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: pip
          cache-dependency-path: "**/requirements*.txt"
      - uses: pre-commit/action@v3.0.1
      - name: Install dependencies
        run: pip install -r requirements_dev.txt
      - name: Run pre-commit
        run: pre-commit
